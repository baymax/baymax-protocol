// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/GetResourceSubCommand.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "proto/GetResourceSubCommand.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - GetResourceSubCommandRoot

@implementation GetResourceSubCommandRoot

@end

#pragma mark - GetResourceSubCommandRoot_FileDescriptor

static GPBFileDescriptor *GetResourceSubCommandRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - GetResourceSubCommand

@implementation GetResourceSubCommand


typedef struct GetResourceSubCommand__storage_ {
  uint32_t _has_storage_[0];
} GetResourceSubCommand__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GetResourceSubCommand class]
                                     rootClass:[GetResourceSubCommandRoot class]
                                          file:GetResourceSubCommandRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(GetResourceSubCommand__storage_)
                                    wireFormat:NO];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
