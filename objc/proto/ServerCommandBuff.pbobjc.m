// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/ServerCommandBuff.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "proto/ServerCommandBuff.pbobjc.h"
#import "proto/SetValueSubCommand.pbobjc.h"
#import "proto/ValueSettedSubCommand.pbobjc.h"
#import "proto/GetResourceSubCommand.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - ServerCommandBuffRoot

@implementation ServerCommandBuffRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[SetValueSubCommandRoot extensionRegistry]];
    [registry addExtensions:[ValueSettedSubCommandRoot extensionRegistry]];
    [registry addExtensions:[GetResourceSubCommandRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - ServerCommandBuffRoot_FileDescriptor

static GPBFileDescriptor *ServerCommandBuffRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - ServerCommandBuff

@implementation ServerCommandBuff

@dynamic subCommandOneOfCase;
@dynamic setValueSubCommand;
@dynamic valueSettedSubCommand;
@dynamic getResourceSubCommand;

typedef struct ServerCommandBuff__storage_ {
  uint32_t _has_storage_[2];
  SetValueSubCommand *setValueSubCommand;
  ValueSettedSubCommand *valueSettedSubCommand;
  GetResourceSubCommand *getResourceSubCommand;
} ServerCommandBuff__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageOneofDescription oneofs[] = {
      {
        .name = "subCommand",
        .index = -1,
      },
    };
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "setValueSubCommand",
        .number = ServerCommandBuff_FieldNumber_SetValueSubCommand,
        .hasIndex = -1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(ServerCommandBuff__storage_, setValueSubCommand),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(SetValueSubCommand),
        .fieldOptions = NULL,
      },
      {
        .name = "valueSettedSubCommand",
        .number = ServerCommandBuff_FieldNumber_ValueSettedSubCommand,
        .hasIndex = -1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(ServerCommandBuff__storage_, valueSettedSubCommand),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(ValueSettedSubCommand),
        .fieldOptions = NULL,
      },
      {
        .name = "getResourceSubCommand",
        .number = ServerCommandBuff_FieldNumber_GetResourceSubCommand,
        .hasIndex = -1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(ServerCommandBuff__storage_, getResourceSubCommand),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(GetResourceSubCommand),
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\003\001\022\000\002\025\000\003\004Q\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ServerCommandBuff class]
                                     rootClass:[ServerCommandBuffRoot class]
                                          file:ServerCommandBuffRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:oneofs
                                    oneofCount:sizeof(oneofs) / sizeof(GPBMessageOneofDescription)
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(ServerCommandBuff__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void ServerCommandBuff_ClearSubCommandOneOfCase(ServerCommandBuff *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = descriptor->oneofs_[0];
  GPBMaybeClearOneof(message, oneof, 0);
}

// @@protoc_insertion_point(global_scope)
