// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/ServerCommandBuff.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/ServerCommandBuff.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ServerCommandBuff_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerCommandBuff_reflection_ = NULL;
struct ServerCommandBuffOneofInstance {
  const ::SetValueSubCommand* setvaluesubcommand_;
  const ::ValueSettedSubCommand* valuesettedsubcommand_;
  const ::GetResourceSubCommand* getresourcesubcommand_;
}* ServerCommandBuff_default_oneof_instance_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fServerCommandBuff_2eproto() {
  protobuf_AddDesc_proto_2fServerCommandBuff_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/ServerCommandBuff.proto");
  GOOGLE_CHECK(file != NULL);
  ServerCommandBuff_descriptor_ = file->message_type(0);
  static const int ServerCommandBuff_offsets_[4] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ServerCommandBuff_default_oneof_instance_, setvaluesubcommand_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ServerCommandBuff_default_oneof_instance_, valuesettedsubcommand_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ServerCommandBuff_default_oneof_instance_, getresourcesubcommand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCommandBuff, subCommand_),
  };
  ServerCommandBuff_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerCommandBuff_descriptor_,
      ServerCommandBuff::default_instance_,
      ServerCommandBuff_offsets_,
      -1,
      -1,
      -1,
      ServerCommandBuff_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCommandBuff, _oneof_case_[0]),
      sizeof(ServerCommandBuff),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCommandBuff, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCommandBuff, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fServerCommandBuff_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerCommandBuff_descriptor_, &ServerCommandBuff::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fServerCommandBuff_2eproto() {
  delete ServerCommandBuff::default_instance_;
  delete ServerCommandBuff_default_oneof_instance_;
  delete ServerCommandBuff_reflection_;
}

void protobuf_AddDesc_proto_2fServerCommandBuff_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_proto_2fSetValueSubCommand_2eproto();
  ::protobuf_AddDesc_proto_2fValueSettedSubCommand_2eproto();
  ::protobuf_AddDesc_proto_2fGetResourceSubCommand_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035proto/ServerCommandBuff.proto\032\036proto/S"
    "etValueSubCommand.proto\032!proto/ValueSett"
    "edSubCommand.proto\032!proto/GetResourceSub"
    "Command.proto\"\306\001\n\021ServerCommandBuff\0221\n\022s"
    "etValueSubCommand\030\001 \001(\0132\023.SetValueSubCom"
    "mandH\000\0227\n\025valueSettedSubCommand\030\002 \001(\0132\026."
    "ValueSettedSubCommandH\000\0227\n\025getREsourceSu"
    "bCommand\030\003 \001(\0132\026.GetResourceSubCommandH\000"
    "B\014\n\nsubCommandb\006proto3", 342);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/ServerCommandBuff.proto", &protobuf_RegisterTypes);
  ServerCommandBuff::default_instance_ = new ServerCommandBuff();
  ServerCommandBuff_default_oneof_instance_ = new ServerCommandBuffOneofInstance();
  ServerCommandBuff::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fServerCommandBuff_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fServerCommandBuff_2eproto {
  StaticDescriptorInitializer_proto_2fServerCommandBuff_2eproto() {
    protobuf_AddDesc_proto_2fServerCommandBuff_2eproto();
  }
} static_descriptor_initializer_proto_2fServerCommandBuff_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerCommandBuff::kSetValueSubCommandFieldNumber;
const int ServerCommandBuff::kValueSettedSubCommandFieldNumber;
const int ServerCommandBuff::kGetREsourceSubCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerCommandBuff::ServerCommandBuff()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerCommandBuff)
}

void ServerCommandBuff::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  ServerCommandBuff_default_oneof_instance_->setvaluesubcommand_ = const_cast< ::SetValueSubCommand*>(&::SetValueSubCommand::default_instance());
  ServerCommandBuff_default_oneof_instance_->valuesettedsubcommand_ = const_cast< ::ValueSettedSubCommand*>(&::ValueSettedSubCommand::default_instance());
  ServerCommandBuff_default_oneof_instance_->getresourcesubcommand_ = const_cast< ::GetResourceSubCommand*>(&::GetResourceSubCommand::default_instance());
}

ServerCommandBuff::ServerCommandBuff(const ServerCommandBuff& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerCommandBuff)
}

void ServerCommandBuff::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_subCommand();
}

ServerCommandBuff::~ServerCommandBuff() {
  // @@protoc_insertion_point(destructor:ServerCommandBuff)
  SharedDtor();
}

void ServerCommandBuff::SharedDtor() {
  if (has_subCommand()) {
    clear_subCommand();
  }
  if (this != default_instance_) {
  }
}

void ServerCommandBuff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerCommandBuff::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerCommandBuff_descriptor_;
}

const ServerCommandBuff& ServerCommandBuff::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fServerCommandBuff_2eproto();
  return *default_instance_;
}

ServerCommandBuff* ServerCommandBuff::default_instance_ = NULL;

ServerCommandBuff* ServerCommandBuff::New(::google::protobuf::Arena* arena) const {
  ServerCommandBuff* n = new ServerCommandBuff;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerCommandBuff::clear_subCommand() {
  switch(subCommand_case()) {
    case kSetValueSubCommand: {
      delete subCommand_.setvaluesubcommand_;
      break;
    }
    case kValueSettedSubCommand: {
      delete subCommand_.valuesettedsubcommand_;
      break;
    }
    case kGetREsourceSubCommand: {
      delete subCommand_.getresourcesubcommand_;
      break;
    }
    case SUBCOMMAND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUBCOMMAND_NOT_SET;
}


void ServerCommandBuff::Clear() {
  clear_subCommand();
}

bool ServerCommandBuff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerCommandBuff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SetValueSubCommand setValueSubCommand = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setvaluesubcommand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_valueSettedSubCommand;
        break;
      }

      // optional .ValueSettedSubCommand valueSettedSubCommand = 2;
      case 2: {
        if (tag == 18) {
         parse_valueSettedSubCommand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_valuesettedsubcommand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_getREsourceSubCommand;
        break;
      }

      // optional .GetResourceSubCommand getREsourceSubCommand = 3;
      case 3: {
        if (tag == 26) {
         parse_getREsourceSubCommand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getresourcesubcommand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerCommandBuff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerCommandBuff)
  return false;
#undef DO_
}

void ServerCommandBuff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerCommandBuff)
  // optional .SetValueSubCommand setValueSubCommand = 1;
  if (has_setvaluesubcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *subCommand_.setvaluesubcommand_, output);
  }

  // optional .ValueSettedSubCommand valueSettedSubCommand = 2;
  if (has_valuesettedsubcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *subCommand_.valuesettedsubcommand_, output);
  }

  // optional .GetResourceSubCommand getREsourceSubCommand = 3;
  if (has_getresourcesubcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *subCommand_.getresourcesubcommand_, output);
  }

  // @@protoc_insertion_point(serialize_end:ServerCommandBuff)
}

::google::protobuf::uint8* ServerCommandBuff::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerCommandBuff)
  // optional .SetValueSubCommand setValueSubCommand = 1;
  if (has_setvaluesubcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *subCommand_.setvaluesubcommand_, target);
  }

  // optional .ValueSettedSubCommand valueSettedSubCommand = 2;
  if (has_valuesettedsubcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *subCommand_.valuesettedsubcommand_, target);
  }

  // optional .GetResourceSubCommand getREsourceSubCommand = 3;
  if (has_getresourcesubcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *subCommand_.getresourcesubcommand_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerCommandBuff)
  return target;
}

int ServerCommandBuff::ByteSize() const {
  int total_size = 0;

  switch (subCommand_case()) {
    // optional .SetValueSubCommand setValueSubCommand = 1;
    case kSetValueSubCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *subCommand_.setvaluesubcommand_);
      break;
    }
    // optional .ValueSettedSubCommand valueSettedSubCommand = 2;
    case kValueSettedSubCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *subCommand_.valuesettedsubcommand_);
      break;
    }
    // optional .GetResourceSubCommand getREsourceSubCommand = 3;
    case kGetREsourceSubCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *subCommand_.getresourcesubcommand_);
      break;
    }
    case SUBCOMMAND_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerCommandBuff::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServerCommandBuff* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerCommandBuff>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerCommandBuff::MergeFrom(const ServerCommandBuff& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.subCommand_case()) {
    case kSetValueSubCommand: {
      mutable_setvaluesubcommand()->::SetValueSubCommand::MergeFrom(from.setvaluesubcommand());
      break;
    }
    case kValueSettedSubCommand: {
      mutable_valuesettedsubcommand()->::ValueSettedSubCommand::MergeFrom(from.valuesettedsubcommand());
      break;
    }
    case kGetREsourceSubCommand: {
      mutable_getresourcesubcommand()->::GetResourceSubCommand::MergeFrom(from.getresourcesubcommand());
      break;
    }
    case SUBCOMMAND_NOT_SET: {
      break;
    }
  }
}

void ServerCommandBuff::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerCommandBuff::CopyFrom(const ServerCommandBuff& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerCommandBuff::IsInitialized() const {

  return true;
}

void ServerCommandBuff::Swap(ServerCommandBuff* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerCommandBuff::InternalSwap(ServerCommandBuff* other) {
  std::swap(subCommand_, other->subCommand_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerCommandBuff::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerCommandBuff_descriptor_;
  metadata.reflection = ServerCommandBuff_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerCommandBuff

// optional .SetValueSubCommand setValueSubCommand = 1;
bool ServerCommandBuff::has_setvaluesubcommand() const {
  return subCommand_case() == kSetValueSubCommand;
}
void ServerCommandBuff::set_has_setvaluesubcommand() {
  _oneof_case_[0] = kSetValueSubCommand;
}
void ServerCommandBuff::clear_setvaluesubcommand() {
  if (has_setvaluesubcommand()) {
    delete subCommand_.setvaluesubcommand_;
    clear_has_subCommand();
  }
}
 const ::SetValueSubCommand& ServerCommandBuff::setvaluesubcommand() const {
  // @@protoc_insertion_point(field_get:ServerCommandBuff.setValueSubCommand)
  return has_setvaluesubcommand()
      ? *subCommand_.setvaluesubcommand_
      : ::SetValueSubCommand::default_instance();
}
::SetValueSubCommand* ServerCommandBuff::mutable_setvaluesubcommand() {
  if (!has_setvaluesubcommand()) {
    clear_subCommand();
    set_has_setvaluesubcommand();
    subCommand_.setvaluesubcommand_ = new ::SetValueSubCommand;
  }
  // @@protoc_insertion_point(field_mutable:ServerCommandBuff.setValueSubCommand)
  return subCommand_.setvaluesubcommand_;
}
::SetValueSubCommand* ServerCommandBuff::release_setvaluesubcommand() {
  if (has_setvaluesubcommand()) {
    clear_has_subCommand();
    ::SetValueSubCommand* temp = subCommand_.setvaluesubcommand_;
    subCommand_.setvaluesubcommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ServerCommandBuff::set_allocated_setvaluesubcommand(::SetValueSubCommand* setvaluesubcommand) {
  clear_subCommand();
  if (setvaluesubcommand) {
    set_has_setvaluesubcommand();
    subCommand_.setvaluesubcommand_ = setvaluesubcommand;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerCommandBuff.setValueSubCommand)
}

// optional .ValueSettedSubCommand valueSettedSubCommand = 2;
bool ServerCommandBuff::has_valuesettedsubcommand() const {
  return subCommand_case() == kValueSettedSubCommand;
}
void ServerCommandBuff::set_has_valuesettedsubcommand() {
  _oneof_case_[0] = kValueSettedSubCommand;
}
void ServerCommandBuff::clear_valuesettedsubcommand() {
  if (has_valuesettedsubcommand()) {
    delete subCommand_.valuesettedsubcommand_;
    clear_has_subCommand();
  }
}
 const ::ValueSettedSubCommand& ServerCommandBuff::valuesettedsubcommand() const {
  // @@protoc_insertion_point(field_get:ServerCommandBuff.valueSettedSubCommand)
  return has_valuesettedsubcommand()
      ? *subCommand_.valuesettedsubcommand_
      : ::ValueSettedSubCommand::default_instance();
}
::ValueSettedSubCommand* ServerCommandBuff::mutable_valuesettedsubcommand() {
  if (!has_valuesettedsubcommand()) {
    clear_subCommand();
    set_has_valuesettedsubcommand();
    subCommand_.valuesettedsubcommand_ = new ::ValueSettedSubCommand;
  }
  // @@protoc_insertion_point(field_mutable:ServerCommandBuff.valueSettedSubCommand)
  return subCommand_.valuesettedsubcommand_;
}
::ValueSettedSubCommand* ServerCommandBuff::release_valuesettedsubcommand() {
  if (has_valuesettedsubcommand()) {
    clear_has_subCommand();
    ::ValueSettedSubCommand* temp = subCommand_.valuesettedsubcommand_;
    subCommand_.valuesettedsubcommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ServerCommandBuff::set_allocated_valuesettedsubcommand(::ValueSettedSubCommand* valuesettedsubcommand) {
  clear_subCommand();
  if (valuesettedsubcommand) {
    set_has_valuesettedsubcommand();
    subCommand_.valuesettedsubcommand_ = valuesettedsubcommand;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerCommandBuff.valueSettedSubCommand)
}

// optional .GetResourceSubCommand getREsourceSubCommand = 3;
bool ServerCommandBuff::has_getresourcesubcommand() const {
  return subCommand_case() == kGetREsourceSubCommand;
}
void ServerCommandBuff::set_has_getresourcesubcommand() {
  _oneof_case_[0] = kGetREsourceSubCommand;
}
void ServerCommandBuff::clear_getresourcesubcommand() {
  if (has_getresourcesubcommand()) {
    delete subCommand_.getresourcesubcommand_;
    clear_has_subCommand();
  }
}
 const ::GetResourceSubCommand& ServerCommandBuff::getresourcesubcommand() const {
  // @@protoc_insertion_point(field_get:ServerCommandBuff.getREsourceSubCommand)
  return has_getresourcesubcommand()
      ? *subCommand_.getresourcesubcommand_
      : ::GetResourceSubCommand::default_instance();
}
::GetResourceSubCommand* ServerCommandBuff::mutable_getresourcesubcommand() {
  if (!has_getresourcesubcommand()) {
    clear_subCommand();
    set_has_getresourcesubcommand();
    subCommand_.getresourcesubcommand_ = new ::GetResourceSubCommand;
  }
  // @@protoc_insertion_point(field_mutable:ServerCommandBuff.getREsourceSubCommand)
  return subCommand_.getresourcesubcommand_;
}
::GetResourceSubCommand* ServerCommandBuff::release_getresourcesubcommand() {
  if (has_getresourcesubcommand()) {
    clear_has_subCommand();
    ::GetResourceSubCommand* temp = subCommand_.getresourcesubcommand_;
    subCommand_.getresourcesubcommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ServerCommandBuff::set_allocated_getresourcesubcommand(::GetResourceSubCommand* getresourcesubcommand) {
  clear_subCommand();
  if (getresourcesubcommand) {
    set_has_getresourcesubcommand();
    subCommand_.getresourcesubcommand_ = getresourcesubcommand;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerCommandBuff.getREsourceSubCommand)
}

bool ServerCommandBuff::has_subCommand() const {
  return subCommand_case() != SUBCOMMAND_NOT_SET;
}
void ServerCommandBuff::clear_has_subCommand() {
  _oneof_case_[0] = SUBCOMMAND_NOT_SET;
}
ServerCommandBuff::SubCommandCase ServerCommandBuff::subCommand_case() const {
  return ServerCommandBuff::SubCommandCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
