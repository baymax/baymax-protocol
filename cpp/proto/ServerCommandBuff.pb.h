// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/ServerCommandBuff.proto

#ifndef PROTOBUF_proto_2fServerCommandBuff_2eproto__INCLUDED
#define PROTOBUF_proto_2fServerCommandBuff_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto/SetValueSubCommand.pb.h"
#include "proto/ValueSettedSubCommand.pb.h"
#include "proto/GetResourceSubCommand.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_2fServerCommandBuff_2eproto();
void protobuf_AssignDesc_proto_2fServerCommandBuff_2eproto();
void protobuf_ShutdownFile_proto_2fServerCommandBuff_2eproto();

class ServerCommandBuff;

// ===================================================================

class ServerCommandBuff : public ::google::protobuf::Message {
 public:
  ServerCommandBuff();
  virtual ~ServerCommandBuff();

  ServerCommandBuff(const ServerCommandBuff& from);

  inline ServerCommandBuff& operator=(const ServerCommandBuff& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerCommandBuff& default_instance();

  enum SubCommandCase {
    kSetValueSubCommand = 1,
    kValueSettedSubCommand = 2,
    kGetREsourceSubCommand = 3,
    SUBCOMMAND_NOT_SET = 0,
  };

  void Swap(ServerCommandBuff* other);

  // implements Message ----------------------------------------------

  inline ServerCommandBuff* New() const { return New(NULL); }

  ServerCommandBuff* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerCommandBuff& from);
  void MergeFrom(const ServerCommandBuff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerCommandBuff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SetValueSubCommand setValueSubCommand = 1;
  bool has_setvaluesubcommand() const;
  void clear_setvaluesubcommand();
  static const int kSetValueSubCommandFieldNumber = 1;
  const ::SetValueSubCommand& setvaluesubcommand() const;
  ::SetValueSubCommand* mutable_setvaluesubcommand();
  ::SetValueSubCommand* release_setvaluesubcommand();
  void set_allocated_setvaluesubcommand(::SetValueSubCommand* setvaluesubcommand);

  // optional .ValueSettedSubCommand valueSettedSubCommand = 2;
  bool has_valuesettedsubcommand() const;
  void clear_valuesettedsubcommand();
  static const int kValueSettedSubCommandFieldNumber = 2;
  const ::ValueSettedSubCommand& valuesettedsubcommand() const;
  ::ValueSettedSubCommand* mutable_valuesettedsubcommand();
  ::ValueSettedSubCommand* release_valuesettedsubcommand();
  void set_allocated_valuesettedsubcommand(::ValueSettedSubCommand* valuesettedsubcommand);

  // optional .GetResourceSubCommand getREsourceSubCommand = 3;
  bool has_getresourcesubcommand() const;
  void clear_getresourcesubcommand();
  static const int kGetREsourceSubCommandFieldNumber = 3;
  const ::GetResourceSubCommand& getresourcesubcommand() const;
  ::GetResourceSubCommand* mutable_getresourcesubcommand();
  ::GetResourceSubCommand* release_getresourcesubcommand();
  void set_allocated_getresourcesubcommand(::GetResourceSubCommand* getresourcesubcommand);

  SubCommandCase subCommand_case() const;
  // @@protoc_insertion_point(class_scope:ServerCommandBuff)
 private:
  inline void set_has_setvaluesubcommand();
  inline void set_has_valuesettedsubcommand();
  inline void set_has_getresourcesubcommand();

  inline bool has_subCommand() const;
  void clear_subCommand();
  inline void clear_has_subCommand();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union SubCommandUnion {
    SubCommandUnion() {}
    ::SetValueSubCommand* setvaluesubcommand_;
    ::ValueSettedSubCommand* valuesettedsubcommand_;
    ::GetResourceSubCommand* getresourcesubcommand_;
  } subCommand_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_proto_2fServerCommandBuff_2eproto();
  friend void protobuf_AssignDesc_proto_2fServerCommandBuff_2eproto();
  friend void protobuf_ShutdownFile_proto_2fServerCommandBuff_2eproto();

  void InitAsDefaultInstance();
  static ServerCommandBuff* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerCommandBuff

// optional .SetValueSubCommand setValueSubCommand = 1;
inline bool ServerCommandBuff::has_setvaluesubcommand() const {
  return subCommand_case() == kSetValueSubCommand;
}
inline void ServerCommandBuff::set_has_setvaluesubcommand() {
  _oneof_case_[0] = kSetValueSubCommand;
}
inline void ServerCommandBuff::clear_setvaluesubcommand() {
  if (has_setvaluesubcommand()) {
    delete subCommand_.setvaluesubcommand_;
    clear_has_subCommand();
  }
}
inline  const ::SetValueSubCommand& ServerCommandBuff::setvaluesubcommand() const {
  // @@protoc_insertion_point(field_get:ServerCommandBuff.setValueSubCommand)
  return has_setvaluesubcommand()
      ? *subCommand_.setvaluesubcommand_
      : ::SetValueSubCommand::default_instance();
}
inline ::SetValueSubCommand* ServerCommandBuff::mutable_setvaluesubcommand() {
  if (!has_setvaluesubcommand()) {
    clear_subCommand();
    set_has_setvaluesubcommand();
    subCommand_.setvaluesubcommand_ = new ::SetValueSubCommand;
  }
  // @@protoc_insertion_point(field_mutable:ServerCommandBuff.setValueSubCommand)
  return subCommand_.setvaluesubcommand_;
}
inline ::SetValueSubCommand* ServerCommandBuff::release_setvaluesubcommand() {
  if (has_setvaluesubcommand()) {
    clear_has_subCommand();
    ::SetValueSubCommand* temp = subCommand_.setvaluesubcommand_;
    subCommand_.setvaluesubcommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ServerCommandBuff::set_allocated_setvaluesubcommand(::SetValueSubCommand* setvaluesubcommand) {
  clear_subCommand();
  if (setvaluesubcommand) {
    set_has_setvaluesubcommand();
    subCommand_.setvaluesubcommand_ = setvaluesubcommand;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerCommandBuff.setValueSubCommand)
}

// optional .ValueSettedSubCommand valueSettedSubCommand = 2;
inline bool ServerCommandBuff::has_valuesettedsubcommand() const {
  return subCommand_case() == kValueSettedSubCommand;
}
inline void ServerCommandBuff::set_has_valuesettedsubcommand() {
  _oneof_case_[0] = kValueSettedSubCommand;
}
inline void ServerCommandBuff::clear_valuesettedsubcommand() {
  if (has_valuesettedsubcommand()) {
    delete subCommand_.valuesettedsubcommand_;
    clear_has_subCommand();
  }
}
inline  const ::ValueSettedSubCommand& ServerCommandBuff::valuesettedsubcommand() const {
  // @@protoc_insertion_point(field_get:ServerCommandBuff.valueSettedSubCommand)
  return has_valuesettedsubcommand()
      ? *subCommand_.valuesettedsubcommand_
      : ::ValueSettedSubCommand::default_instance();
}
inline ::ValueSettedSubCommand* ServerCommandBuff::mutable_valuesettedsubcommand() {
  if (!has_valuesettedsubcommand()) {
    clear_subCommand();
    set_has_valuesettedsubcommand();
    subCommand_.valuesettedsubcommand_ = new ::ValueSettedSubCommand;
  }
  // @@protoc_insertion_point(field_mutable:ServerCommandBuff.valueSettedSubCommand)
  return subCommand_.valuesettedsubcommand_;
}
inline ::ValueSettedSubCommand* ServerCommandBuff::release_valuesettedsubcommand() {
  if (has_valuesettedsubcommand()) {
    clear_has_subCommand();
    ::ValueSettedSubCommand* temp = subCommand_.valuesettedsubcommand_;
    subCommand_.valuesettedsubcommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ServerCommandBuff::set_allocated_valuesettedsubcommand(::ValueSettedSubCommand* valuesettedsubcommand) {
  clear_subCommand();
  if (valuesettedsubcommand) {
    set_has_valuesettedsubcommand();
    subCommand_.valuesettedsubcommand_ = valuesettedsubcommand;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerCommandBuff.valueSettedSubCommand)
}

// optional .GetResourceSubCommand getREsourceSubCommand = 3;
inline bool ServerCommandBuff::has_getresourcesubcommand() const {
  return subCommand_case() == kGetREsourceSubCommand;
}
inline void ServerCommandBuff::set_has_getresourcesubcommand() {
  _oneof_case_[0] = kGetREsourceSubCommand;
}
inline void ServerCommandBuff::clear_getresourcesubcommand() {
  if (has_getresourcesubcommand()) {
    delete subCommand_.getresourcesubcommand_;
    clear_has_subCommand();
  }
}
inline  const ::GetResourceSubCommand& ServerCommandBuff::getresourcesubcommand() const {
  // @@protoc_insertion_point(field_get:ServerCommandBuff.getREsourceSubCommand)
  return has_getresourcesubcommand()
      ? *subCommand_.getresourcesubcommand_
      : ::GetResourceSubCommand::default_instance();
}
inline ::GetResourceSubCommand* ServerCommandBuff::mutable_getresourcesubcommand() {
  if (!has_getresourcesubcommand()) {
    clear_subCommand();
    set_has_getresourcesubcommand();
    subCommand_.getresourcesubcommand_ = new ::GetResourceSubCommand;
  }
  // @@protoc_insertion_point(field_mutable:ServerCommandBuff.getREsourceSubCommand)
  return subCommand_.getresourcesubcommand_;
}
inline ::GetResourceSubCommand* ServerCommandBuff::release_getresourcesubcommand() {
  if (has_getresourcesubcommand()) {
    clear_has_subCommand();
    ::GetResourceSubCommand* temp = subCommand_.getresourcesubcommand_;
    subCommand_.getresourcesubcommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ServerCommandBuff::set_allocated_getresourcesubcommand(::GetResourceSubCommand* getresourcesubcommand) {
  clear_subCommand();
  if (getresourcesubcommand) {
    set_has_getresourcesubcommand();
    subCommand_.getresourcesubcommand_ = getresourcesubcommand;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerCommandBuff.getREsourceSubCommand)
}

inline bool ServerCommandBuff::has_subCommand() const {
  return subCommand_case() != SUBCOMMAND_NOT_SET;
}
inline void ServerCommandBuff::clear_has_subCommand() {
  _oneof_case_[0] = SUBCOMMAND_NOT_SET;
}
inline ServerCommandBuff::SubCommandCase ServerCommandBuff::subCommand_case() const {
  return ServerCommandBuff::SubCommandCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fServerCommandBuff_2eproto__INCLUDED
