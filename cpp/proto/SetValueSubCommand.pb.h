// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/SetValueSubCommand.proto

#ifndef PROTOBUF_proto_2fSetValueSubCommand_2eproto__INCLUDED
#define PROTOBUF_proto_2fSetValueSubCommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_2fSetValueSubCommand_2eproto();
void protobuf_AssignDesc_proto_2fSetValueSubCommand_2eproto();
void protobuf_ShutdownFile_proto_2fSetValueSubCommand_2eproto();

class SetValueSubCommand;

// ===================================================================

class SetValueSubCommand : public ::google::protobuf::Message {
 public:
  SetValueSubCommand();
  virtual ~SetValueSubCommand();

  SetValueSubCommand(const SetValueSubCommand& from);

  inline SetValueSubCommand& operator=(const SetValueSubCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetValueSubCommand& default_instance();

  enum ValuesCase {
    kOtherValue = 2,
    VALUES_NOT_SET = 0,
  };

  void Swap(SetValueSubCommand* other);

  // implements Message ----------------------------------------------

  inline SetValueSubCommand* New() const { return New(NULL); }

  SetValueSubCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetValueSubCommand& from);
  void MergeFrom(const SetValueSubCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetValueSubCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 otherValue = 2;
  private:
  bool has_othervalue() const;
  public:
  void clear_othervalue();
  static const int kOtherValueFieldNumber = 2;
  ::google::protobuf::uint32 othervalue() const;
  void set_othervalue(::google::protobuf::uint32 value);

  // optional uint32 userId = 3;
  void clear_userid();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  ValuesCase values_case() const;
  // @@protoc_insertion_point(class_scope:SetValueSubCommand)
 private:
  inline void set_has_othervalue();

  inline bool has_values() const;
  void clear_values();
  inline void clear_has_values();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 userid_;
  union ValuesUnion {
    ValuesUnion() {}
    ::google::protobuf::uint32 othervalue_;
  } values_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_proto_2fSetValueSubCommand_2eproto();
  friend void protobuf_AssignDesc_proto_2fSetValueSubCommand_2eproto();
  friend void protobuf_ShutdownFile_proto_2fSetValueSubCommand_2eproto();

  void InitAsDefaultInstance();
  static SetValueSubCommand* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SetValueSubCommand

// optional uint32 id = 1;
inline void SetValueSubCommand::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SetValueSubCommand::id() const {
  // @@protoc_insertion_point(field_get:SetValueSubCommand.id)
  return id_;
}
inline void SetValueSubCommand::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:SetValueSubCommand.id)
}

// optional uint32 otherValue = 2;
inline bool SetValueSubCommand::has_othervalue() const {
  return values_case() == kOtherValue;
}
inline void SetValueSubCommand::set_has_othervalue() {
  _oneof_case_[0] = kOtherValue;
}
inline void SetValueSubCommand::clear_othervalue() {
  if (has_othervalue()) {
    values_.othervalue_ = 0u;
    clear_has_values();
  }
}
inline ::google::protobuf::uint32 SetValueSubCommand::othervalue() const {
  // @@protoc_insertion_point(field_get:SetValueSubCommand.otherValue)
  if (has_othervalue()) {
    return values_.othervalue_;
  }
  return 0u;
}
inline void SetValueSubCommand::set_othervalue(::google::protobuf::uint32 value) {
  if (!has_othervalue()) {
    clear_values();
    set_has_othervalue();
  }
  values_.othervalue_ = value;
  // @@protoc_insertion_point(field_set:SetValueSubCommand.otherValue)
}

// optional uint32 userId = 3;
inline void SetValueSubCommand::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 SetValueSubCommand::userid() const {
  // @@protoc_insertion_point(field_get:SetValueSubCommand.userId)
  return userid_;
}
inline void SetValueSubCommand::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:SetValueSubCommand.userId)
}

inline bool SetValueSubCommand::has_values() const {
  return values_case() != VALUES_NOT_SET;
}
inline void SetValueSubCommand::clear_has_values() {
  _oneof_case_[0] = VALUES_NOT_SET;
}
inline SetValueSubCommand::ValuesCase SetValueSubCommand::values_case() const {
  return SetValueSubCommand::ValuesCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fSetValueSubCommand_2eproto__INCLUDED
